AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    Runtime: java8
    CodeUri: HelloWorldFunction
    Tracing: Active
    MemorySize: 512
  Api:
    # This removes the "Stage" stage automatically created
    # See https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-resource-api-properties
    OpenApiVersion: 3.0.1

Resources:
  PutterToS3:
    Type: AWS::Serverless::Function
    Properties:
      Handler: me.jiashenb.trysam.PutterToS3::handleRequest
      Policies:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Environment:
        Variables:
          BUCKET_NAME: !Ref MyBucket

  PutterToDdb:
    Type: AWS::Serverless::Function
    Properties:
      Handler: me.jiashenb.trysam.PutterToDdb::handleRequest
      Policies:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Environment:
        Variables:
          TABLE_NAME: !Ref MyTable

  MyTable:
    Type: AWS::Serverless::SimpleTable
    Properties: {}

  MyStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        StartAt: Put in S3
        States:
          Put in S3:
            Type: Task
            Resource: !GetAtt PutterToS3.Arn
            Next: Put in Ddb
          Put in Ddb:
            Type: Task
            Resource: !GetAtt PutterToDdb.Arn
            End: true
      Policies:
        - arn:aws:iam::aws:policy/AdministratorAccess

  MyBucket:
    Type: AWS::S3::Bucket
    Properties: {}

  MyQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 360  # 6 * LambdaTimeout

  SenderToQueue:
    Type: AWS::Serverless::Function
    Properties:
      Handler: me.jiashenb.trysam.SenderToQueue::handleRequest
      Policies:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Environment:
        Variables:
          QUEUE_URL: !Ref MyQueue

  ReceiverFromQueue:
    Type: AWS::Serverless::Function
    Properties:
      Handler: me.jiashenb.trysam.ReceiverFromQueue::handleRequest
      Policies:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Events:
        QueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MyQueue.Arn

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: me.jiashenb.trysam.App::handleRequest
      Runtime: java8
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
